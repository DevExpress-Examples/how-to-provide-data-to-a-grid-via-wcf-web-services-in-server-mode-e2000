//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Original file name:
// Generation date: 2/11/2013 11:13:41 AM
namespace E2000.ServiceReference1
{
    
    /// <summary>
    /// There are no comments for TestDatabaseEntities1 in the schema.
    /// </summary>
    public partial class TestDatabaseEntities1 : global::System.Data.Services.Client.DataServiceContext
    {
        /// <summary>
        /// Initialize a new TestDatabaseEntities1 object.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public TestDatabaseEntities1(global::System.Uri serviceRoot) : 
                base(serviceRoot)
        {
            this.ResolveName = new global::System.Func<global::System.Type, string>(this.ResolveNameFromType);
            this.ResolveType = new global::System.Func<string, global::System.Type>(this.ResolveTypeFromName);
            this.OnContextCreated();
        }
        partial void OnContextCreated();
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        protected global::System.Type ResolveTypeFromName(string typeName)
        {
            if (typeName.StartsWith("TestDatabaseModel", global::System.StringComparison.Ordinal))
            {
                return this.GetType().Assembly.GetType(string.Concat("E2000.ServiceReference1", typeName.Substring(17)), false);
            }
            return null;
        }
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        protected string ResolveNameFromType(global::System.Type clientType)
        {
            if (clientType.Namespace.Equals("E2000.ServiceReference1", global::System.StringComparison.Ordinal))
            {
                return string.Concat("TestDatabaseModel.", clientType.Name);
            }
            return null;
        }
        /// <summary>
        /// There are no comments for Messages in the schema.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public global::System.Data.Services.Client.DataServiceQuery<Message> Messages
        {
            get
            {
                if ((this._Messages == null))
                {
                    this._Messages = base.CreateQuery<Message>("Messages");
                }
                return this._Messages;
            }
        }
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        private global::System.Data.Services.Client.DataServiceQuery<Message> _Messages;
        /// <summary>
        /// There are no comments for Messages in the schema.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    }
    /// <summary>
    /// There are no comments for TestDatabaseModel.Message in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::System.Data.Services.Common.EntitySetAttribute("Messages")]
    [global::System.Data.Services.Common.DataServiceKeyAttribute("Id")]
    public partial class Message : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        /// <param name="from">Initial value of From.</param>
        /// <param name="subject">Initial value of Subject.</param>
        /// <param name="sent">Initial value of Sent.</param>
        /// <param name="size">Initial value of Size.</param>
        /// <param name="hasAttachment">Initial value of HasAttachment.</param>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public static Message CreateMessage(long ID, string from, string subject, global::System.DateTime sent, long size, bool hasAttachment)
        {
            Message message = new Message();
            message.Id = ID;
            message.From = from;
            message.Subject = subject;
            message.Sent = sent;
            message.Size = size;
            message.HasAttachment = hasAttachment;
            return message;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        private long _Id;
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property From in the schema.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public string From
        {
            get
            {
                return this._From;
            }
            set
            {
                this.OnFromChanging(value);
                this._From = value;
                this.OnFromChanged();
                this.OnPropertyChanged("From");
            }
        }
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        private string _From;
        partial void OnFromChanging(string value);
        partial void OnFromChanged();
        /// <summary>
        /// There are no comments for Property Subject in the schema.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public string Subject
        {
            get
            {
                return this._Subject;
            }
            set
            {
                this.OnSubjectChanging(value);
                this._Subject = value;
                this.OnSubjectChanged();
                this.OnPropertyChanged("Subject");
            }
        }
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        private string _Subject;
        partial void OnSubjectChanging(string value);
        partial void OnSubjectChanged();
        /// <summary>
        /// There are no comments for Property Sent in the schema.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public global::System.DateTime Sent
        {
            get
            {
                return this._Sent;
            }
            set
            {
                this.OnSentChanging(value);
                this._Sent = value;
                this.OnSentChanged();
                this.OnPropertyChanged("Sent");
            }
        }
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        private global::System.DateTime _Sent;
        partial void OnSentChanging(global::System.DateTime value);
        partial void OnSentChanged();
        /// <summary>
        /// There are no comments for Property Size in the schema.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public long Size
        {
            get
            {
                return this._Size;
            }
            set
            {
                this.OnSizeChanging(value);
                this._Size = value;
                this.OnSizeChanged();
                this.OnPropertyChanged("Size");
            }
        }
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        private long _Size;
        partial void OnSizeChanging(long value);
        partial void OnSizeChanged();
        /// <summary>
        /// There are no comments for Property HasAttachment in the schema.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public bool HasAttachment
        {
            get
            {
                return this._HasAttachment;
            }
            set
            {
                this.OnHasAttachmentChanging(value);
                this._HasAttachment = value;
                this.OnHasAttachmentChanged();
                this.OnPropertyChanged("HasAttachment");
            }
        }
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        private bool _HasAttachment;
        partial void OnHasAttachmentChanging(bool value);
        partial void OnHasAttachmentChanged();
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
}
